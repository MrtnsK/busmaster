<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" []>
<topic id="node_simulation" xml:lang="en-us">
  <title>Node Simulation</title>
  <prolog>
    <author>Ratnadip Choudhury</author>
    <copyright>
      <copyryear year="2011"/>
      <copyrholder>ROBERT BOSCH ENGINEERING AND BUSINESS SOLUTIONS LIMITED</copyrholder>
    </copyright>
  </prolog>
  <body>
    <p>This addresses the programming and configuration aspect of the node simulation.</p>
    <p>At the outset the typical node assembly scenario may be recalled to consider the role of such application in such a scenario. Below goes a schematic view of the node ensemble:<image href="../images/umls/dd_can_bus_1.png" placement="break"/></p>
    <p>Node simulation feature makes it possible for the application to simulate one or multiple node characteristics which may be depicted by the following schematic view.<image href="../images/umls/dd_can_bus_2.png" placement="break"/></p>
    <p>Typically, in BUSMASTER parlance and viewpoint, a simulated system consists of a few nodes and the CAN bus is realized by a number of simulated systems. Hence,</p>
    <p>A CAN bus (full / partial) = {Simulated system 1, Simulated system 2, …, Simulated system N }</p>
    <p>A simulated system = {Node 1, Node 2,  …, Node N }</p>
    <p>A bus node is realized in the desired way by programming the set of handlers such a node is associated with. Following this, below handlers may be edited:<ul>
        <li>Data message handlers: Message handling is based on certain directives on association which can be the following:<ol>
            <li>On a list of discrete frame identifiers</li>
            <li>On a range of frame identifiers</li>
            <li>All received frames</li>
          </ol></li>
        <li>Timer handlers: Here the triggering is based on timer in MS.</li>
        <li>Key handlers: This basically corresponds to a user event which is realized as a key press.</li>
        <li>Error handler: This focuses on the bus error conditions and hence bus specific.</li>
        <li>Connect / disconnect handler: These handlers are called when the node joins the bus and is disconnected from it. </li>
      </ul></p>
    <p>From deployment viewpoint, a node is realized by the application as a DLL. A node is programmed with C language. Hence, connect / disconnect handler in this scenario may thought to be logically associated with loading / unloading events of the DLL.</p>
    <p>So the handlers are added as C global functions. Besides, addition of utility functions and global variables are supported for obvious programming reason. To carry out any domain specific operation (e.g., transmission of a frame, start / stop logging, tracing any message, going online / offline etc)  the source programme requires a suitable API. Moreover, the framework should also make it possible for the make the loaded database (messages and signals defined) available for usage. The function editor framework provides these services. The former one is available through an API of the application and the later one is made accessible through a header file generated on the fly as a result of the database loading.</p>
    <p>The final phase of node programming is the building where the C file is compiled and a DLL is built. This library is appreciated as the node characteristics deployed. The building result is available. In case of any error, it shall be possible to navigate to the erroneous source line.</p>
    <p>Below presented the user interface specifications with due explanation:<image href="../images/screenshots/simulated_systems_config.png" placement="break"/></p>
    <p>The above diagram shows defining a simulated system to the point of a node configuration. The GUI clearly shall reflect the whole assembly of the simulated systems and the nodes under each of them. It shall be possible to edit each of them with the related fundamental functionalities readily available through a number of popup menus. The below diagram shows the functionalities segregated into different popup menus resulted from the right click on bus, a simulated system and a node respectively.<image href="../images/screenshots/simulated_systems_menus.png" placement="break"/></p>
    <p>Programming a node involves associating the same with a C file. Function editor shall provide a programming framework. The various functionalities shall be provided by the framework:<ul>
        <li>Addition / deletion / editing of include headers</li>
        <li>Addition / deletion / editing of message handlers</li>
        <li>Addition / deletion / editing of timer handlers</li>
        <li>Addition / deletion / editing of error handlers</li>
        <li>Addition / deletion / editing of key handlers</li>
        <li>Addition / deletion / editing of DLL handlers</li>
        <li>Addition / deletion / editing of utility functions</li>
        <li>While working in a handler or function body, listing of the following ~<ul>
            <li>API set of the application</li>
            <li>Available frames of the loaded database</li>
            <li>Available signals of the loaded database</li>
          </ul></li>
      </ul></p>
    <p>Below is presented the GUI specification of function editor for a source file.<image href="../images/screenshots/function_editor.png" placement="break"/></p>
    <p>The GUIs involved in editing all the tree nodes under the source file are shown below:<image href="../images/screenshots/function_editor_windows_1.png" placement="break"/><image href="../images/screenshots/function_editor_windows_2.png" placement="break"/></p>
    <p>The error handler has a direct relation to the bus. Below is shown the one for CAN:<image href="../images/screenshots/error_handler_select.png" placement="break"/></p>
    <p>The tagged requirement details are provided below:<ul>
        <li>User shall be able to select &quot;Simulated Systems&quot; window by clicking &quot;Configure -&gt;Simulated System(s)&quot; menu</li>
        <li>On right clicking the root of the tree &quot;CAN Bus&quot; in the left pane, a pop up menu shall appear. It shall have options: &quot;New Simulated System&quot; , &quot;Add Simulated System&quot;, &quot;Save All systems&quot; and &quot;Delete All Systems&quot;. On right clicking any simulated system in the left pane, ref fig 2.3.4 a pop up menu shall appear having options: &quot;Save&quot;, &quot;Save As&quot;, &quot;Delete Simulated System&quot;, &quot;Add Node&quot;, &quot;Remove All Nodes&quot;, &quot; Build All&quot; , &quot;Load All&quot; , &quot;Unload All&quot; , &quot;Enable / Disable All Handlers&quot;, &quot;Enable / Disable All Key Handlers&quot;, &quot;Enable / Disable All Message Handlers&quot;, &quot;Enable / Disable All Error Handlers&quot;, &quot;Enable / Disable All Timer Handlers&quot;. [RS_13_1]</li>
        <li>If there are no simulated systems under the &quot;CAN Bus&quot; the option &quot;Delete All Systems&quot; shall be disabled.[RS_13_2]</li>
        <li>A new simulated system shall be added by right clicking the root of the tree in the left pane, &quot;CAN Bus&quot; and selecting &quot;New Simulated System&quot; from the pop up menu. A browser shall appear to enter the name of the new simulated system. [RS_13_3] ref Fig 2.3.3</li>
        <li>On giving the new simulated system name and selecting the Save button in the browser, the name of the new simulated system shall be shown under the &quot;CAN Bus&quot; [RS_13_3.1] and the configuration file shall be saved under the specified directory. [RS_13_4]</li>
        <li>The path of the new simulated system&apos;s configuration file shall be included in the main configuration file. [RS_13_5]</li>
        <li>On giving the name of the new simulated system as an existing one which is not connected to the &quot;CAN Bus&quot;, a message box shall pop up saying &quot;The file already exits. Do you want to replace it?&quot;. [RS_13_6]</li>
        <li>On selecting &quot;Yes&quot;, the old simulated system configuration shall be replaced by the new one only if the simulated system is not present in the tree view of the simulated system window. [RS_13_7]</li>
        <li>On selecting &quot;No&quot;, the focus shall be on the new simulated system file name to enable the user to enter the file name again. [RS_13_8]</li>
        <li>If the simulated system is already included in the tree view then a message box shall pop up saying &quot;The simulated system is already present&quot; and replacing the file shall not take place. [RS_13_9]</li>
        <li>If the simulated system is not present in the tree view of the simulated system window the selected simulated system configuration file&apos;s path shall be updated to the new one in the main configuration file.[RS_13_11]</li>
        <li>The left pane , tree view of the &quot;Simulated system&quot; window shall also be updated with the new simulated system details.[RS_13_12]</li>
        <li>On selecting &quot;No&quot; there shall be no change in the &quot;Simulated System&quot; window and the action shall be cancelled.[RS_13_13]</li>
        <li>An existing simulated system shall be added by right clicking the root of the tree in the left pane, &quot;CAN Bus&quot; and selecting &quot;Add Simulated System&quot; from the pop up menu. A browser shall appear with all the existing simulated system&apos;s names, to select the name of the existing simulated system. If the simulated system is already present under the &quot;Can Bus&quot; in the tree of the simulated system window then it shall not added and it shall be indicated to the user. [RS_13_14]</li>
        <li>On selecting an existing simulated system name it shall be added under the &quot;CAN Bus&quot;. [RS_13_15]</li>
        <li>If the selected simulated system has the same C file or DLL which is already present under any simulated systems present under the &quot;CAN bus&quot; in the tree view of the simulated system window , it shall not be added. [RS_13_10]</li>
        <li>The configuration of the existing simulated system shall be included in the main configuration file. [RS_13_16]</li>
        <li>On entering a non existing simulated system name in the browser a message box shall appear saying &quot;File not found. Please check if the correct file name was entered&quot;. [RS_13_17]</li>
        <li>On selecting &quot;Delete All Systems&quot; option on right clicking the root of the tree &quot;CAN Bus&quot; in the left pane, a confirmation message is thrown whether the user is sure to delete them or not if no DLL under any simulated system is loaded. [RS_13_18]</li>
        <li>When the user selects &quot;Yes&quot; in the confirmation message box , if any DLL under any simulated system is loaded and &quot;Delete All Systems&quot; is selected a message box shall pop up saying &quot;Unload all DLLs and try again!&quot; to indicate the user that the simulated system cannot be deleted without unloading the DLL under it. [RS_13_19].</li>
        <li>The configuration paths of the simulated systems under the &quot;CAN Bus&quot; are deleted from the main configuration file if it is saved by selecting File-&gt;Configuration-&gt;Save. [RS_13_20]</li>
        <li>The simulated system details are deleted from the left pane under the &quot;CAN Bus&quot; and the right pane shall show an empty frame. [RS_13_21]</li>
        <li>On selecting &quot;No&quot; in the confirmation message box there shall be no change in the &quot;Simulated Systems&quot; window and the main configuration file.[RS_13_22]</li>
        <li>The configuration of the simulated system under the &quot;CAN Bus&quot; shall be saved by right clicking on that particular simulated system and selecting &quot;Save&quot; option in the menu. [RS_13_23] ref Fig 2.3.4</li>
        <li>The configuration of the simulated system under the &quot;CAN Bus&quot; shall be saved as a different configuration by right clicking on that particular simulated system and selecting &quot;Save As&quot; option in the menu. [RS_13_24]</li>
        <li>A new node shall be added by right clicking the simulated system under which it is to be added, in the left pane and selecting &quot;Add Node&quot; from the pop up menu. A Node details dialog box shall appear in which the user shall specify its name and load the existing DLL by selecting the browse button [RS_13_25]</li>
        <li>The browser shall show the list of the DLL present. When the user specifies a DLL which is already loaded / present under any other simulated system under the &quot;CAN Bus&quot; , a message box shall pop up saying &quot; Duplicate DLL found!&quot;. [RS_13_26]</li>
        <li>On entering a non existing DLL name in the browser a message box shall appear saying &quot;DLL not found. Please check if the correct DLL name was entered&quot;. [RS_13_27]</li>
        <li>If the new Node is given an existing Node name under that particular simulated system and &quot;OK&quot; is selected, a dialog box saying &quot;Duplicate Node name found&quot; shall appear. [RS_13_28]</li>
        <li>The included DLL shall be shown under the node where it is included in the left pane under the &quot;CAN Bus&quot; in normal font indicating that the DLL is unloaded by default. [RS_13_29]</li>
        <li>By default the DLL under the Node shall be unloaded and the Node details frame in the right pane of the &quot;Simulated system&quot; window shall show &quot;Load&quot; button to enable the user to load the DLL if required. [RS_13_30]</li>
        <li>On selecting the &quot;Load&quot; button in the right pane of the &quot;Simulated system&quot; window&quot; the name of the DLL under that particular node shall be made BOLD indicating that the DLL under the node is loaded. [RS_13_31]</li>
        <li>When the DLL is already loaded the button in the right pane of the &quot;Simulated system&quot; window shall toggle to &quot;Unload&quot;. [RS_13_32]</li>
        <li>The DLL included under the node shall be unloaded by selecting the &quot;Unload&quot; button in the right pane of the &quot;Simulated system&quot; window in the Node details frame. [RS_13_33]</li>
        <li>Unloading the DLL shall change the font of the DLL&apos;s path under that particular node to normal from BOLD in the right pane.</li>
        <li>The node and its details shall be added pressing &quot;OK&quot; in the Node Details dialog box and the same shall be indicated under the &quot;CAN Bus&quot;. [RS_13_34]</li>
        <li>The selected DLL through &quot;Browse&quot; button can be deleted by selecting &quot;Clear&quot; button. This is enabled only when there is any DLL selected. [ RS_13_105 ]</li>
        <li>The new node details shall be added in the simulated system&apos;s configuration file under which it is included on selecting &quot;Save&quot; by right clicking the simulated system. [RS_13_35]</li>
        <li>Adding a node shall be cancelled by selecting &quot;Cancel&quot; in the Node Details dialog box. [RS_13_36]</li>
        <li>On selecting &quot;OK&quot; button in the Node Details dialog box, a Node Details frame shall appear on the left pane showing the details of the node entered and the handler details frame and the controls in it shall be disabled, ref Fig 2.3.6. [RS_13_37]</li>
        <li>When any C file is associated with the node &quot;Open File&quot; button shall be enabled in the &quot;Node Details&quot; frame. A confirmation box shall appear whether to continue to change the node details or not. [RS_13_106]</li>
        <li>When &quot;yes&quot; is selected in the confirmation box a browser shall appear which shall enable the user to select any C file. [RS_13_107]</li>
        <li>When &quot;no&quot; is selected in the confirmation box no change shall be observed. [RS_13_108]</li>
        <li>When DLL is loaded, an attempt to &quot;Open File&quot; shall indicate the user to unload the DLL first and then try. [RS_13_109]</li>
        <li>When the DLL is unloaded, &quot;Open File&quot; shall enable the user to associate another C file. If the corresponding DLL is also present in the same directory even the DLL name shall be changed for that particular node. The new C file shall be updated in the right view of the simulated system window in the File edit box. [RS_13_110]</li>
        <li>When the DLL is present for the same C file which is selected, the tree view of the simulated system window shall be updated with the new DLL under that particular node. [RS_13_111]</li>
        <li>When no DLL is associated with the Node the menu options &quot;All Handlers&quot;, &quot;Key Handlers&quot;, &quot;Message Handlers&quot;, &quot;Error Handlers&quot;, &quot;Timer Handlers&quot; shall be disabled on right clicking that particular Node in the left pane(tree view). [RS_13_38]</li>
        <li>When the DLL is already loaded and the corresponding C file is modified outside the change shall be reflected only when the corresponding C file is built and loaded using &quot;Build and Load&quot; button in the right pane of the simulated system window. [RS_13_39]</li>
        <li>The user shall edit the C file when the corresponding DLL is loaded by selecting &quot;Edit File&quot; button. The file name to be opened shall be taken from the Edit box &quot;C File&quot; in Node details frame. [RS_13_40]</li>
        <li>The edited file shall be saved by using the existing feature File-&gt;Function Editor-&gt; Save. But the changes in it shall be reflected only when the file is unloaded and then built and load using button &quot;Unload&quot; , &quot;Build and Load&quot; in the Node details frame. [RS_13_41]</li>
        <li>If the C file is edited &quot;Load&quot; button shall be enabled. But it asks the user that the C file has been edited. Do u want to build and load or not. If &quot;No&quot; then load the DLL which is previously there. [RS_13_112]</li>
        <li>When the DLL is unloaded and the C file is edited and saved through Function Editor the toggle button &quot;Load/Unload&quot; is disabled as it has to be first built and then loaded. Only &quot;Build&quot; and &quot;Build and Load&quot; buttons shall be enabled.(change this to the previous requirement) [RS_13_42]</li>
        <li>If the DLL is already loaded and the corresponding C file is present , on selecting &quot;Open File&quot; button it shall indicate the user that he can associate another C file only after unloading the DLL. [RS_13_43]</li>
        <li>The &quot;Edit file&quot; button shall be disabled when there is no C file for the corresponding loaded DLL in the same directory. [RS_13_44]</li>
        <li>When a new C file is included the toggle button &quot;Load/Unload&quot; shall remain disabled until it is built using &quot;Build&quot; or &quot;Build and Load&quot; buttons in the Node details frame. [RS_13_45]</li>
        <li>A new.C file shall be created by selecting the &quot;Open File&quot; button in the &quot;File Details&quot; frame and giving a non existing c file name. This also opens the C file for editing. [RS_13_46]</li>
        <li>The path of the saved new.C file using Function Editor-&gt; Save shall be updated under the &quot;CAN Bus&quot; and also in the File Details frame. [RS_13_47]</li>
        <li>The handler details frame shall be updated with the handler details of the loaded DLL, ref Fig 2.3.7.</li>
        <li>The handler details frame shall be updated with the handler details of the new file only when it is built using &quot;Build&quot; or &quot;Build and Load&quot; buttons in the &quot;Node details&quot; frame. [RS_13_48]</li>
        <li>The handler details frame shall show the details of the handler of the latest built DLL if it is already present and it is loaded. [RS_13_49]</li>
        <li>When the user selects &quot;Unload&quot;, the DLL loaded shall be unloaded and the user shall have the provision to include a new file or existing one by selecting &quot;Open File&quot; or edit the existing C file by selecting &quot;Edit File&quot;. All the buttons &quot;Build&quot;, &quot;Build and Load&quot; and &quot;Load&quot; shall be enabled. The handler details frame shall be disabled when the DLL is unloaded. [RS_13_50]</li>
        <li>The edited .C file shall be saved by selecting File-&gt; Function Editor-&gt; Save menu option. [RS_13_51]</li>
        <li>If the C file is saved as an already existing C file in the same directory a confirmation shall be asked if the user wants to replace the old file. If the DLL of the same name is loaded in the &quot;CAN Bus&quot; then a message shall pop up saying &quot;The DLL with the same name is already loaded. Unload it first&quot; on selecting &quot;Unload&quot; button in the &quot;Node details&quot; frame in the right pane. [RS_13_52]</li>
        <li>If there is no DLL loaded from the &quot;Node details&quot; dialog box or no C file associated with that particular node then &quot;Build&quot;, &quot;Build and Load&quot;, &quot;Load&quot; and &quot;Edit File&quot; buttons are disabled. [RS_13_53]</li>
        <li>To build, build and load, load and unload, from the function editor buttons: &quot;B&quot;, &quot;BL&quot;, &quot;L&quot;, &quot;UL&quot; in the toolbar which are already present shall be used. [RS_13_54]</li>
        <li>On right clicking any simulated system &quot;Remove All nodes&quot; shall be disabled if there are no nodes present under that simulated system. [RS_13_113]</li>
        <li>All the nodes under a particular simulated system shall be deleted by right clicking and selecting &quot;Remove All Nodes&quot; option. A confirmation message is thrown whether the user is sure to delete them or not if the DLL associated with it is not loaded. [RS_13_55]</li>
        <li>When the user selects &quot;Yes&quot; in the confirmation message box , the node details are deleted from the left pane under the selected simulated system and the right pane shows an empty frame. [RS_13_56]</li>
        <li>On selecting &quot;No&quot; in the confirmation message box there shall be no change in the &quot;Simulated Systems&quot; window. [RS_13_57]</li>
        <li>If the DLL associated with any of the nodes is loaded and &quot;Remove All Nodes&quot; is selected, the user shall be given an indication that some of the DLL are loaded. Unload it first and try again. Only when no DLL is loaded under a simulated system &quot;Remove All Nodes&quot; is possible. [RS_13_114]</li>
        <li>The user shall have a provision to Enable/Disable: All Handlers [RS_13_58], All Key Handlers [RS_13_59], All Message Handlers [RS_13_60], All Error Handlers [RS_13_61], All Timer Handlers [RS_13_62] by right clicking the required simulated system and selecting the appropriate option.</li>
        <li>When any of the DLL is loaded under the simulated system, all these options shall be enabled in the pop up menu. [RS_13_115]</li>
        <li>When no DLL under the simulated system is loaded , all these options shall be disabled in the pop menu. [RS_13_116]</li>
        <li>All the handlers of all the DLL loaded under the simulated system can be enabled by selecting &quot;Enable All Handlers&quot; on right clicking any simulated system. [RS_13_117]</li>
        <li>When &quot;Enable All handlers&quot; is selected , as all the handlers are enabled the text shall be toggled to &quot;Disable All Handlers&quot; , &quot;Disable All Key Handlers&quot; , &quot;Disable All Message Handlers&quot; , &quot;Disable All Error Handlers&quot; , &quot;Disable All Timer Handlers&quot;. [RS_13_118]</li>
        <li>All the handlers of all the DLL loaded under the simulated system can be disabled by selecting &quot;Disable All Handlers&quot; on right clicking any simulated system. [RS_13_119]</li>
        <li>The text in the pop up menu shall be toggled to &quot;Disable All handlers&quot; only when &quot;Enable All handlers&quot; was selected. [RS_13_120]</li>
        <li>When &quot;Disable All handlers&quot; is selected , as all the handlers are disabled the text shall be toggled to &quot;Enable All Handlers&quot; , &quot;Enable All Key Handlers&quot; , &quot;Enable All Message Handlers&quot; , &quot;Enable All Error Handlers&quot; , &quot;Enable All Timer Handlers&quot;. [RS_13_121]</li>
        <li>When &quot;Enable All Key Handlers&quot; is selected all the key handlers of all the DLL which are loaded under the simulated system shall be enabled and the text of the option is toggled to &quot;Disable All Key Handlers&quot;. [RS_13_122]</li>
        <li>When &quot;Enable All Message Handlers&quot; is selected in the pop up menu of the tree view , all the key handlers of all the DLL which are loaded under the simulated system shall be enabled. So when any node under that simulated system is selected the handler details of the node shall show the status of the message handler as &quot;Enabled&quot;. [RS_13_123]</li>
        <li>When the message handler is selected in the handler details frame , the button text is toggled from &quot;Enable Handler&quot; to &quot;Disable Handler&quot;. [RS_13_124]</li>
        <li>When &quot;Enable All Message Handlers&quot; is selected all the message handlers of all the DLL which are loaded under the simulated system shall be enabled and the text of the option is toggled to &quot;Disable All Message Handlers&quot;. [RS_13_125]</li>
        <li>When &quot;Enable All Message Handlers&quot; is selected in the pop up menu of the tree view , all the message handlers of all the DLL which are loaded under the simulated system shall be enabled. So when any node under that simulated system is selected the handler details of the node shall show the status of the key handler as &quot;Enabled&quot;. [RS_13_126]</li>
        <li>When the message handler is selected in the handler details frame , the button text is toggled from &quot;Enable Handler&quot; to &quot;Disable Handler&quot;. [RS_13_127]</li>
        <li>When &quot;Enable All Error Handlers&quot; is selected all the error handlers of all the DLL which are loaded under the simulated system shall be enabled and the text of the option is toggled to &quot;Disable All Error Handlers&quot;. [RS_13_128]</li>
        <li>When &quot;Enable All Error Handlers&quot; is selected in the pop up menu of the tree view , all the error handlers of all the DLL which are loaded under the simulated system shall be enabled. So when any node under that simulated system is selected the handler details of the node shall show the status of the error handler as &quot;Enabled&quot;. [RS_13_129]</li>
        <li>When the error handler is selected in the handler details frame, the button text is toggled from &quot;Enable Handler&quot; to &quot;Disable Handler&quot;. [RS_13_130]</li>
        <li>When &quot;Enable All Timer Handlers&quot; is selected all the timer handlers of all the DLL which are loaded under the simulated system shall be enabled and the text of the option is toggled to &quot;Disable All Timer Handlers&quot;. [RS_13_131]</li>
        <li>When &quot;Enable All Timer Handlers&quot; is selected in the pop up menu of the tree view , all the timer handlers of all the DLL which are loaded under the simulated system shall be enabled. So when any node under that simulated system is selected the handler details of the node shall show the status of the timer handler as &quot;Enabled&quot;. [RS_13_132]</li>
        <li>When the timer handler is selected in the handler details frame, the button text is toggled from &quot;Enable Handler&quot; to &quot;Disable Handler&quot;. [RS_13_133]</li>
        <li>A particular simulated system shall be deleted by right clicking on it and selecting &quot;Delete Simulated System&quot;. A confirmation message box shall pop if the user is sure of deleting it or not. [RS_13_63]</li>
        <li>When the user selects &quot;Yes&quot; the DLL s loaded under that particular simulated system are unloaded and that simulated system details are deleted from the left pane under the &quot;CAN Bus&quot; and the right pane shall show an empty pane. [RS_13_64]</li>
        <li>Deleting the simulated system shall delete the path of that simulated system&apos;s configuration file from the main configuration when the main configuration is saved by File-&gt;Configuration-&gt;Save. [RS_13_65]</li>
        <li>If any DLL are loaded under the simulated system then it shall be intimated to the user that the one or more DLL are loaded. Unload it and try again! [RS_13_134]</li>
        <li>On right clicking any Node in the left pane, ref fig 2.3.8 a pop up menu shall appear having options : &quot;Edit Node&quot;, &quot;Remove Node&quot;, &quot;Enable /Disable All Handlers&quot;, &quot;Enable /Disable Key Handlers&quot;, &quot;Enable / Disable Message Handlers&quot;, &quot;Enable / Disable Error Handlers&quot;, &quot;Enable / Disable Timer Handlers&quot;. [RS_13_66]</li>
        <li>The node details, &quot;Node Name&quot; and the &quot;DLL&quot; shall be edited by right clicking on that particular node in the left pane of the &quot;Simulated Systems&quot; window and selecting &quot;Edit Node&quot;. The Node Details dialog box shall appear to enable the user to edit the details. [RS_13_67] ref Fig 2.3.8</li>
        <li>On selecting &quot;OK&quot; the details shall be updated in the Node Details frame shown in the right pane [RS_13_68] and if the name of the Node is edited then it is also updated under the &quot;CAN Bus&quot;. [RS_13_69]</li>
        <li>Whenever there is a change in the node details it shall be updated in the simulated system&apos;s configuration file under which it is included when saved by right clicking on that simulated system and selecting &quot;Save&quot; option. [RS_13_70]</li>
        <li>The node shall be deleted from the &quot;CAN Bus&quot; by right clicking on that particular node and selecting &quot;Remove Node&quot; from the pop up menu. A confirmation message box shall pop up. [RS_13_71]</li>
        <li>On selecting &quot;Yes&quot; in the confirmation message box the DLL if loaded under it is unloaded [RS_13_72]and the node details shall be deleted from the simulated system&apos;s configuration file under which it is configured (if saved) [RS_13_73] and also in the left pane of the &quot;Simulated System&quot; window. [RS_13_74]</li>
        <li>On selecting &quot;No&quot; in the confirmation message box the node shall not be deleted and no change shall be observed under the &quot;CAN Bus&quot;. [RS_13_75]</li>
        <li>If the DLL associated with the node is loaded, then intimation shall be given to the user that the DLL is loaded. Unload it and try again. [RS_13_135]</li>
        <li>When one or more nodes are configured under a simulated system, the updated node details shall be shown in the right pane on a single left click of a particular node in the left pane. [RS_13_76] ref Fig 2.3.7</li>
        <li>The handler details frame shall show the details of the handlers , ref Fig 2.3.7 associated with that particular node&apos;s Dll and also the details of individual handlers when a particular handler is selected from the handler details list box provided only when the DLL is loaded. [RS_13_77]</li>
        <li>All the handlers of that particular node shall be enabled or disabled by selecting the toggling button &quot;Enable/Disable All Handlers&quot;[RS_13_78]</li>
        <li>This change shall be reflected in the pop up menu which appears on right clicking on that particular node in the tree view of the simulated system window, i.e. the text in the pop up menu shall also be changed to &quot;Disable All handlers&quot;. [RS_13_136]</li>
        <li>When all the handlers are enabled the button shall toggle to show &quot;Disable All Handlers&quot; and vice a versa. When all the handlers are neither enabled or disabled the toggle button shall toggle to &quot;Enable All Handlers&quot; by default. [RS_13_79]</li>
        <li>The Start/Stop Timers dialog box shall be modified to deal with multiple nodes by providing a combo box with all the nodes configured, ref Fig 2.3.9.When a node is selected from the combo box the &quot;Timer Handler Name&quot; column shall be updated with the timer handlers configured for that particular node. Individual timer of each node shall be enabled or disabled by selecting the timer names. [RS_13_80]</li>
        <li>Individual handlers of that particular node shall be enabled or disabled by selecting a handler in the handler details frame and pressing the &quot;Enable /Disable Handler&quot; toggle button. [RS_13_81]</li>
        <li>When the selected handler is enabled the button toggles to &quot;Disable Handler&quot; and vice a versa. [RS_13_82]</li>
        <li>On enabling/disabling the timer handler in the handler details or by right clicking the simulated system or the node under the &quot;CAN Bus&quot; the Start/Stop Timers dialog box shall appear with the Node Name combo box entry as the node name from which it is called showing its Timer information [RS_13_83].</li>
        <li>The combo box for the Node Name shall be disabled if it is invoked for a particular node. [RS_13_84]</li>
        <li>When &quot;Enable / Disable All Timer handlers&quot; is selected by right clicking on any simulated system or from the Tool bar Set Reset Timer dialog box shall appear with all the active nodes (nodes whose DLL are loaded) in the combo box respectively. [RS_13_137]</li>
        <li>The user shall have a provision to Enable / Disable: All Handlers [RS_13_85], Key Handlers [RS_13_86], Message Handlers [RS_13_87], Error Handlers [RS_13_88], All Timer Handlers [RS_13_89] by right clicking the required node and selecting the appropriate option</li>
        <li>The whole &quot;CAN Bus&quot; configuration and its details shall be saved by : File-&gt; Configuration-&gt; Save. This file shall contain the list of the configuration paths of all the simulated systems under the &quot;CAN Bus&quot;. [RS_13_90]</li>
        <li>If any simulated systems are present under the &quot;CAN Bus&quot;, the focus shall be on the first simulated system showing the empty frame in the right pane when the user selects menu option Configuration-&gt;Simulated Systems. [RS_13_91]</li>
        <li>If the user tries to close the application or the &quot;Simulated System&quot; window without saving the configuration a message box shall appear saying &quot;You have made changes to the configuration. Do you want to save it?&quot; [RS_13_92]</li>
        <li>The configuration shall be saved by selecting &quot;Yes&quot; option and discarded by selecting &quot;No&quot;. [RS_13_93]</li>
        <li>New buttons like &quot;BA&quot; [RS_13_94], &quot;BLA&quot; [RS_13_95], &quot;LA&quot; [RS_13_96], &quot;ULA&quot; [RS_13_97], build all, build and load all, load all, unload all shall be added in the toolbar.</li>
        <li>When &quot;LA&quot; is selected from the tool bar all the DLL of all the simulated systems configured under the present main configuration shall be loaded. [RS_13_138]</li>
        <li>This shall be indicated by making the DLL names BOLD in the tree view of the simulated system window. [RS_13_139]</li>
        <li>When &quot;UA&quot; is selected from the tool bar all the DLL of all the simulated systems configured under the present main configuration shall be unloaded. [RS_13_140]</li>
        <li>This shall be indicated by making the DLL names normal from BOLD in the tree view of the simulated system window. [RS_13_141]</li>
        <li>When the DLLs are loaded the state of the DLLs under any simulated system shall indicate that the DLLs are loaded. When right clicked on any simulated system whose DLL are loaded, the text in the pop up menu shall be toggled to &quot;Unload All&quot; and the same when right clicked on any node. [RS_13_142]</li>
        <li>&quot;BA&quot; , &quot;BLA&quot; in the tool bar shall be enabled only when at least one C file is present under any simulated system which is configured under that particular main configuration. [RS_13_143]</li>
        <li>&quot;LA&quot; shall be enabled only when at least one DLL is present under any simulated system which is configured under that particular main configuration. [RS_13_144]</li>
        <li>The tool bar buttons to enable / disable: all handlers , message handlers , timer handlers, key handlers, error handlers shall be modified to enable all the handlers or individual handlers for all the DLL which are loaded from all the simulated systems. [RS_13_145]</li>
        <li>These tool bar buttons shall be enabled only when at least one DLL is loaded and the tool is connected. [RS_13_146]</li>
        <li>When &quot;BLA&quot; , &quot;LA&quot; or &quot;UA&quot; tool bar buttons are selected the success or failure in the operation shall be indicated to the user in the Output Window. [RS_13_147]</li>
        <li>When &quot;BLA&quot; or &quot;BA&quot; is selected from the tool bar and if some of the files are not built properly the user shall be indicated about the errors in building the file in the Output window. Double Clicking on the Output window on the error , shall open the respective C file in the function editor if it not opened and point at the statement which has caused the error. [RS_13_148]</li>
        <li>The success or failure in the operation shall be indicated to the user in the Output Window when the user selects &quot;Load All&quot;, &quot;Unload All&quot; , &quot;Build All&quot; on right clicking on any simulated system or when &quot;Load&quot;, &quot;Unload&quot;, &quot;Build&quot; , &quot;Build All&quot; is selected in the right view of the simulated system window. [RS_13_149]</li>
        <li>The global variables shall be accessed and modified across nodes. [RS_13_98]</li>
        <li>Two API&apos;s &quot;Node Active&quot; [RS_13_99] and &quot;Node Passive&quot; [RS_13_100] shall be implemented.</li>
        <li>The online help shall be updated to reflect the new features. [RS_13_101]</li>
        <li>The performance of the tool shall remain same as for the 4.00.01.X.XXX version tool. [RS_13_102]</li>
        <li>Appropriate validation message shall pop warning the user wherever it is required. [RS_13_103]</li>
        <li>The API&apos;s exposed from the application shall be updated internally to handle multiple DLLs. [RS_13_104]</li>
      </ul></p>
  </body>
</topic>
