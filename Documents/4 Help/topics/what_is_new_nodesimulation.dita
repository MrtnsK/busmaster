<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" []>
<topic id="stcan_struct" xml:lang="en-us">
  <title>What is new?</title>
  <prolog>
    <author>Ratnadip Choudhury</author>
    <copyright>
      <copyryear year="2011"/>
      <copyrholder>ROBERT BOSCH ENGINEERING AND BUSINESS SOLUTIONS LIMITED</copyrholder>
    </copyright>
    <metadata>
      <keywords>
        <indexterm>STCAN_MSG Structure</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><b>Node Simulation v1.2 changes</b></p>
    <p><ul>
        <li>STCAN_MSG in node simulation is updated to ease accessing message attributes, signal values and to support Big Endian signals as given below</li>
        <li>
          <p><codeblock>class STCAN_MSG
{
  unsigned int    id;        
  bool            isExtended; 
  bool            isRtr;    
  unsigned char   dlc;      
  unsigned char   cluster;
  unsigned char   data[64];
  unsigned long   timeStamp;
  bool            isCanfd;

  // To set data
  bool byteAt(int index, unsigned char val);
  bool wordAt(int index, unsigned short val);
  bool longAt(int index, unsigned long val);

  // To get data
  unsigned char  byteAt(int index);
  unsigned short wordAt(int index);
  unsigned long longAt(int index);
};</codeblock></p>
        </li>
      </ul></p>
    <p><ul>
        <li>Following functions are supported to access/update Signal values</li>
        <li>
          <codeblock>To <b>set</b> signal rawvalue or physicalvalue
  1. rawvalue(int x); // Type &apos;int&apos; will vary as per the signal type
  2. physicalvalue(double x);


To <b>get</b> signal rawvalue or physicalvalue
  1. rawvalue(); // returns signal rawvalue
  2. physicalvalue(); // returns signal physicalvalue

For more details, refer &apos;Examples&apos; section under &apos;CAN-&gt;Node Simulation&apos;</codeblock>
        </li>
      </ul></p>
    <p><ul>
        <li>On importing Node Simulation .cpp file of version 1.1, .cpp file will be automatically updated with version 1.2 changes and a backup file will be created in the same path (.bak file)</li>
        <li>CAN CAPL to Cpp conversion is updated as per Node Simulation 1.2 structures</li>
      </ul></p>
  </body>
</topic>
