<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" []>
<topic id="stcan_struct" xml:lang="en-us">
  <title>STCAN_MSG Structure</title>
  <prolog>
    <author>Ratnadip Choudhury</author>
    <copyright>
      <copyryear year="2011"/>
      <copyrholder>ROBERT BOSCH ENGINEERING AND BUSINESS SOLUTIONS LIMITED</copyrholder>
    </copyright>
    <metadata>
      <keywords>
        <indexterm>STCAN_MSG Structure</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>STCAN_MSG is the CAN message structure which accepts CAN parameters and data.</p>
    <p><codeblock>class STCAN_MSG
{
  unsigned int    id;        
  bool            isExtended; 
  bool            isRtr;    
  unsigned char   dlc;      
  unsigned char   cluster;
  unsigned char   data[64];
  unsigned long   timeStamp;
  bool            isCanfd;

  // To set data
  bool byteAt(int index, unsigned char val);
  bool wordAt(int index, unsigned short val);
  bool longAt(int index, unsigned long val);

  // To get data
  unsigned char  byteAt(int index);
  unsigned short wordAt(int index);
  unsigned long longAt(int index);
};</codeblock></p>
    <p><table frame="all">
        <tgroup cols="2">
          <colspec colnum="1"/>
          <colspec colnum="2"/>
          <tbody>
            <row>
              <entry>
                <b>Member</b>
              </entry>
              <entry>
                <b>Description</b>
              </entry>
            </row>
            <row>
              <entry>
                <b>id</b>
              </entry>
              <entry>CAN message identifier is a unsigned integer in decimal or hexadecimal (0x) to identify the message</entry>
            </row>
            <row>
              <entry>
                <b>isExtended</b>
              </entry>
              <entry>true for extended message. Possible values: true, false</entry>
            </row>
            <row>
              <entry>
                <b>isRtr</b>
              </entry>
              <entry>true for Remote Transmission Request. Possible values: true, false</entry>
            </row>
            <row>
              <entry>
                <b>dlc</b>
              </entry>
              <entry>Data Length in bytes. [0-8] for CAN messages, [0-64] for CANFD messages</entry>
            </row>
            <row>
              <entry>
                <b>cluster</b>
              </entry>
              <entry>channel on which the frame is received or to be transmitted</entry>
            </row>
            <row>
              <entry>
                <b><b>data</b>[64]</b>
              </entry>
              <entry>Message data. [0-7] bytes for CAN, [0-63] bytes for CANFD messages</entry>
            </row>
            <row>
              <entry>
                <b>isCanfd</b>
              </entry>
              <entry>true for CANFD message. Possible values: true, false</entry>
            </row>
            <row>
              <entry>
                <b>timeStamp</b>
              </entry>
              <entry>Received frame absolute timestamp in 100&apos;s of microseconds</entry>
            </row>
            <row>
              <entry>bool <b>byteAt</b>(int index, unsigned char val)</entry>
              <entry>To set data byte (8 bit). Possible index: [0-7]. Example: byteAt(0, 10); &apos;0&apos; is index, 10 is value</entry>
            </row>
            <row>
              <entry>bool <b>wordAt</b>(int index, unsigned short val)</entry>
              <entry>To set data word (16 bit). Possible index: [0-3]. Example: wordAt(0, 10); &apos;0&apos; is index, 10 is value.</entry>
            </row>
            <row>
              <entry>bool <b>longAt</b>(int index, unsigned long val)</entry>
              <entry>To set data word (32 bit). Possible index: [0-1]. Example: longAt(0, 10); &apos;0&apos; is index, 10 is value. </entry>
            </row>
          </tbody>
        </tgroup>
      </table></p>
  </body>
</topic>
