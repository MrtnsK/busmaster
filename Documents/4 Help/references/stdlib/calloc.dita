<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/reference.dtd" []>
<reference id="calloc" xml:lang="en-us">
  <title>calloc : allocate space for arrays</title>
  <refbody>
    <section>
      <title>Synopsis</title>
      <codeblock>#include &lt;stdlib.h&gt;
void *calloc(size_t n, size_t s);
void *calloc_r(void *reent, size_t &lt;n&gt;, &lt;size_t&gt; s);</codeblock>
    </section>
    <section>
      <title>Description</title>
      <p>Use calloc to request a block of memory sufficient to hold an array of n elements, each of which has size s.</p>
      <p>The memory allocated by calloc comes out of the same memory pool used by malloc, but the memory block is initialized to all zero bytes. (To avoid the overhead of initializing the space, use malloc instead.)</p>
      <p>The alternate functios _calloc_r is reentrant. The extra argument reent is a pointer to a reentrancy structure.</p>
    </section>
    <section>
      <title>Returns</title>
      <p>If successful, a pointer to the newly allocated space. If unsuccessful, NULL.</p>
    </section>
  </refbody>
</reference>
