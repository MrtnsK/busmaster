#include "olectl.h"
[ uuid(C3F9B41A-D3AD-4b36-BA65-C5C2F1A314D9), version(1.0) ]

// This is usually the name of your application.
library CAN_MonitorApp
{
    #include "IdlStructure.h"
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(12324088-748E-4017-BA5A-3B7F61CE8FBF),
		oleautomation,
		dual,
		helpstring("_IAppEvents Interface")
	]
	interface _IAppEvents : IUnknown
	{
		[id(1), helpstring("method OnMessageReceived")] HRESULT OnMessageReceived(CAN_MSGS RxMsg);
	};	
	
	
	[ uuid(B3DBF7E2-93DD-4c0c-A237-0E8E46D354C6),
	  oleautomation,
	  dual
	]

	interface IBusMasterApp : IDispatch
	{
		[id(1), helpstring("method Connect")] HRESULT Connect(BOOL bConnect);
		[id(2), helpstring("method GetMsgInfo")] HRESULT GetMsgInfo(BSTR MsgName,sMESSAGESTRUCT  *sMsgStruct);
		[id(3), helpstring("method GetNetworkStatistics")] HRESULT GetNetworkStatistics(int nChannel, sBUSSTATISTICS_USR *sStat);		
		[id(4), helpstring("method GetErrorCounter")] HRESULT GetErrorCounter(UCHAR *Tx, UCHAR *Rx, INT nChannel);
		[id(5), helpstring("method ImportDatabase")] HRESULT ImportDatabase(BSTR DBFilePath);
		[id(6), helpstring("method LoadConfiguration")] HRESULT LoadConfiguration(BSTR FileName);		
		[id(7), helpstring("method SaveConfiguration")] HRESULT SaveConfiguration();		
		[id(8), helpstring("method SaveConfigurationAs")] HRESULT SaveConfigurationAs(BSTR ConfigPath);
		[id(9), helpstring("method RegisterClientForRx")] HRESULT RegisterClientForRx([in] USHORT usUniqueID, [out] BSTR* pEventName, [out] BSTR* pPIPEName);
		[id(10), helpstring("method UnRegisterClient")] HRESULT UnRegisterClient([in] USHORT usUniqueID);
		//[id(11), helpstring("GetApplication")] HRESULT GetApplication([out] IBusMaster** pApplication);
	};

	[ uuid(92D435C1-A552-4435-AD1E-468B4C17BDC7) ]
	coclass BusMasterApp
	{
		[default] interface IBusMasterApp;		
	};	

	//[ uuid(97787126-BC1A-441A-BA3B-B637C3EB4FDD),
	//  oleautomation,
	//  dual
	//]
	
	//interface IApplication : IDispatch
	//{
	//	[id(1), helpstring("GetApplication")] HRESULT GetApplication([out] IBusMaster** pApplication);
	//};

	//[ uuid(505084AB-628B-4AE0-BE40-4D5E721FFADD) ]
	//coclass Application
	//{
	//	[default] interface IApplication;
	//	[default, source] interface _IAppEvents;		
	//};

	[ uuid(AF3A15D0-1444-4640-B60A-E360EFFF5051),
	  oleautomation,
	  dual
	]
	interface ICANComm : IDispatch
	{		
		[id(1), helpstring("method SendCANMSg")] HRESULT SendCANMSg(CAN_MSGS *sMsg);
		[id(2), helpstring("GetApplication")] HRESULT GetApplication([out] IBusMasterApp** pApplication);
	};

	[ uuid(1B90CA83-8652-41FC-B29A-191D57B455A3) ]
	coclass Comm
	{
		[default] interface ICANComm;		
	};	

	[ uuid(29AEFD20-EA16-4A3B-B0B2-6EEB6971D066),
	  oleautomation,
	  dual
	]

	interface ICANLog : IDispatch
	{
		[id(1), helpstring("method StopLogging")] HRESULT StopLogging();
		[id(2), helpstring("method StartLogging")] HRESULT StartLogging();
		[id(3), helpstring("method AddLoggingBlock")] HRESULT AddLoggingBlock(SLOGGINGBLOCK_USR* psLoggingBlock);
		[id(4), helpstring("method GetLoggingBlock")] HRESULT GetLoggingBlock([in] USHORT BlockIndex, [out] SLOGGINGBLOCK_USR* psLoggingBlock);
		[id(5), helpstring("method RemoveLoggingBlock")] HRESULT RemoveLoggingBlock([in] USHORT BlockIndex);
		[id(6), helpstring("method GetLoggingBlockCount")] HRESULT GetLoggingBlockCount([out] USHORT* BlockCount);
		[id(7), helpstring("method ClearLoggingBlockList")] HRESULT ClearLoggingBlockList(void);
		[id(8), helpstring("method WriteToLogFile")] HRESULT WriteToLogFile(USHORT BlockIndex, BSTR pcStr);
		[id(9), helpstring("GetApplication")] HRESULT GetApplication([out] IBusMasterApp** pApplication);
	};

	[ uuid(BADFFC69-8FCB-4181-880C-615D09848CD6) ]
	coclass Log
	{
		[default] interface ICANLog;		
	};	

};
 